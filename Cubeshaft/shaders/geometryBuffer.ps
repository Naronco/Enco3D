#version 120

// Varyings
varying vec3 texCoord;
varying vec3 normal;
varying vec3 worldViewPos;
varying vec4 worldViewProjectionPos;
varying vec4 prevWorldViewProjectionPos;

// Uniforms
uniform vec3 rendering_globalAmbientLightColor;
uniform float rendering_zNearClippingPlane;
uniform float rendering_zFarClippingPlane;

uniform vec3 mat_diffuseColor;
uniform sampler2D mat_diffuseTexture;

void main()
{
	// Calculate velocity for velocity buffer
	vec2 a = (worldViewProjectionPos.xy / worldViewProjectionPos.w) * 0.5f + 0.5f;
	vec2 b = (prevWorldViewProjectionPos.xy / prevWorldViewProjectionPos.w) * 0.5f + 0.5f;
	vec2 velocity = (a - b) * 0.5f + 0.5f;
	velocity = pow(velocity, vec2(3.0f, 3.0f));
	
	gl_FragData[0] = vec4(texture2D(mat_diffuseTexture, texCoord.xy).rgb * mat_diffuseColor, 1.0f);
	gl_FragData[1] = vec4(normal * 0.5f + 0.5f, 1.0f);
	
//	gl_FragData[0] = vec4(worldViewPos, 1.0f);                                                  // WorldView-Position
//	gl_FragData[1] = vec4(normal * 0.5f + 0.5f, 1.0f);                                          // WorldView-Normal
//	gl_FragData[2] = texture2D(mat_diffuseTexture, texCoord.xy); // Light
//	gl_FragData[3]                                                                              // Background (Write in Skybox Shader)
//	gl_FragData[4] = vec4(velocity, 0.0f, 1.0f);                                                // Velocity
}